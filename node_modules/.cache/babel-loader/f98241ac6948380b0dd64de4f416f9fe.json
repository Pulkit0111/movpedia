{"ast":null,"code":"var _jsxFileName = \"/home/pulkit/Documents/peronal_react_practice/movpedia/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { Search } from \"./components/Search\";\nimport { css } from \"@emotion/react\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"red\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweet-loading\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLoading(!loading),\n      children: \"Toggle Loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: color,\n      onChange: input => setColor(input.target.value),\n      placeholder: \"Color of the loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BounceLoader, {\n      color: color,\n      loading: loading,\n      css: override,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bRMws3U9Py03PwBrKrcvSIYqLzw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pulkit/Documents/peronal_react_practice/movpedia/src/App.jsx"],"names":["Search","css","BounceLoader","useState","App","loading","setLoading","color","setColor","input","target","value","override"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,MAAT,QAAuB,qBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAhC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMG,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF/B;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEJ,KAArB;AAA4B,MAAA,OAAO,EAAEF,OAArC;AAA8C,MAAA,GAAG,EAAEO,QAAnD;AAA6D,MAAA,IAAI,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAfQR,G;;KAAAA,G;AAiBT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { Search } from \"./components/Search\";\nimport { css } from \"@emotion/react\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"red\");\n  return (\n    <div className=\"sweet-loading\">\n      <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\n      <input\n        value={color}\n        onChange={(input) => setColor(input.target.value)}\n        placeholder=\"Color of the loader\"\n      />\n\n      <BounceLoader color={color} loading={loading} css={override} size={150} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}