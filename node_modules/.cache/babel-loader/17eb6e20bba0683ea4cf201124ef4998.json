{"ast":null,"code":"var _jsxFileName = \"/home/pulkit/Documents/peronal_react_practice/mov_pedia/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Poster } from \"./Poster\";\nimport { Detail } from \"./Detail\";\nimport styles from \"../Style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [released, setReleased] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [director, setDirector] = useState(\"\");\n  const [actors, setActors] = useState(\"\");\n  const [plot, setPlot] = useState(\"\");\n  const [get, setGet] = useState(false);\n  const [imdb, setImdb] = useState(\"\");\n  const [rt, setRt] = useState(\"\");\n\n  const handleChange = e => {\n    let x = e.target.value;\n    setName(x);\n  };\n\n  const handleSearch = async () => {\n    let {\n      data\n    } = await axios.get(`http://www.omdbapi.com/?apikey=4f9513ae&t=${name}`);\n    setPoster(data.Poster);\n    setTitle(data.Title);\n    setReleased(data.Released);\n    setGenre(data.Genre);\n    setDirector(data.Director);\n    setActors(data.Actors);\n    setPlot(data.Plot);\n    setGet(true);\n    setImdb(data.Ratings[0].Value);\n    setRt(data.Ratings[1].Value);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        placeholder: \"Search for a movie...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Poster, {\n          image: poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.detail,\n        children: get ? /*#__PURE__*/_jsxDEV(Detail, {\n          title: title,\n          release: released,\n          genre: genre,\n          director: director,\n          actor: actors,\n          plot: plot,\n          imdb: imdb,\n          rt: rt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Search, \"bumIImoTuhx6V1YW8+pCRzeZ3kw=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/pulkit/Documents/peronal_react_practice/mov_pedia/src/components/Search.jsx"],"names":["axios","useState","Poster","Detail","styles","Search","name","setName","poster","setPoster","title","setTitle","released","setReleased","genre","setGenre","director","setDirector","actors","setActors","plot","setPlot","get","setGet","imdb","setImdb","rt","setRt","handleChange","e","x","target","value","handleSearch","data","Title","Released","Genre","Director","Actors","Plot","Ratings","Value","console","log","searchContainer","content","detail"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Poster } from \"./Poster\";\nimport { Detail } from \"./Detail\";\nimport styles from \"../Style.module.css\";\n\nexport const Search = () => {\n  const [name, setName] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [released, setReleased] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [director, setDirector] = useState(\"\");\n  const [actors, setActors] = useState(\"\");\n  const [plot, setPlot] = useState(\"\");\n  const [get, setGet] = useState(false);\n  const [imdb, setImdb] = useState(\"\");\n  const [rt, setRt] = useState(\"\");\n\n  const handleChange = (e) => {\n    let x = e.target.value;\n    setName(x);\n  };\n\n  const handleSearch = async () => {\n    let { data } = await axios.get(\n      `http://www.omdbapi.com/?apikey=4f9513ae&t=${name}`\n    );\n    setPoster(data.Poster);\n    setTitle(data.Title);\n    setReleased(data.Released);\n    setGenre(data.Genre);\n    setDirector(data.Director);\n    setActors(data.Actors);\n    setPlot(data.Plot);\n    setGet(true);\n    setImdb(data.Ratings[0].Value);\n    setRt(data.Ratings[1].Value);\n    console.log(data);\n  };\n  return (\n    <>\n      <div className={styles.searchContainer}>\n        <input\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"Search for a movie...\"\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <div className={styles.content}>\n        <div>\n          <Poster image={poster} />\n        </div>\n        <div className={styles.detail}>\n          {get ? (\n            <Detail\n              title={title}\n              release={released}\n              genre={genre}\n              director={director}\n              actor={actors}\n              plot={plot}\n              imdb={imdb}\n              rt={rt}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}